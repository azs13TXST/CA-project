#include <iostream>
#include <list>

using namespace std;

class HashMapTable {
// size of the hash table
  int table_size;
// Pointer to an array containing the keys
  list<int> *table;
  public:
// creating constructor of the above class containing all the methods
HashMapTable(int key);
// hash function to compute the index using table_size and key
  int hashFunction(int key) {
    return (key % table_size);
  }
// inserting the key in the hash table
  void insertElement(int key);
// deleting the key in the hash table
  void deleteElement(int key);
// displaying the full hash table
  void displayHashTable();
};

//creating the hash table with the given table size
HashMapTable::HashMapTable(int  ts)  {
  this->table_size = ts;
  table = new list<int>[table_size];
}

// insert function to push the keys in hash table
void HashMapTable::insertElement(int key)  {
  int index = hashFunction(key);
  table[index].push_back(key);
}

// delete function to delete the element from the hash table
void HashMapTable::deleteElement(int key)  {
  int index = hashFunction(key);
// finding the key at the computed index
  list <int> :: iterator i;
  for (i = table[index].begin(); i != table[index].end(); i++)  {
    if (*i == key)
    break;
  }
// removing the key from hash table if found
  if (i != table[index].end())
    table[index].erase(i);
}

// display function to showcase the whole hash table
void HashMapTable::displayHashTable() {
  for (int i = 0; i<table_size; i++) {
    cout<<i;
// traversing at the recent/ current index
    for (int j : table[i]) 
      cout << " ==> " << j;

     cout << endl;
  }
}

// Main function
int main()  {

// array of all the keys to be inserted in hash table
  int arr[] = {4, 5, 10, 17, 25, 28, 30, 31, 35, 36, 38, 41, 50, 51, 56, 58, 62, 70, 74, 81, 82, 86, 93, 94, 99, 102, 104, 118, 122, 126, 135, 136, 139, 160, 162, 163, 166, 167, 170, 182, 190, 193, 194, 196, 202, 211, 220, 224, 227, 234, 236, 243, 247, 249, 252, 255, 269, 277, 278, 288, 293, 298, 299, 303, 311, 314, 323, 342, 346, 352, 355, 356, 364, 367, 370, 383, 385, 387, 389, 394, 407, 423, 426, 427, 434, 437, 441, 449, 453, 455, 457, 460, 478, 487, 489, 491, 493, 495, 497, 499, 25, 51, 53, 72, 87, 111, 122, 139, 142, 144, 153, 154, 173, 175, 179, 183, 187, 190, 200, 201, 219, 241, 269, 270, 271, 274, 283, 292, 297, 298, 305, 331, 338, 346, 372, 388, 409, 424, 427, 429, 432, 438, 441, 453, 462, 475, 485, 491, 494, 502, 517, 555, 576, 580, 585, 588, 599, 616, 628, 632, 643, 650, 654, 660, 664, 665, 686, 699, 713, 723, 739, 745, 753, 761, 762, 771, 790, 795, 797, 806, 811, 820, 821, 845, 877, 898, 902, 906, 909, 916, 923, 925, 938, 948, 952, 960, 964, 981, 990, 101, 114, 118, 148, 151, 164, 167, 264, 311, 336, 358, 364, 420, 452, 454, 538, 597, 605, 681, 847, 851, 915, 985, 1038, 1046, 1091, 1185, 1206, 1219, 1337, 1356, 1374, 1497, 1551, 1552, 1559, 1630, 1648, 1811, 1829, 1871, 1883, 1922, 1925, 1952, 2001, 2016, 2237, 2371, 2406, 2457, 2460, 2497, 2541, 2557, 2636, 2786, 2869, 2897, 2904, 2984, 3030, 3057, 3165, 3183, 3194, 3211, 3429, 3433, 3464, 3579, 3615, 3619, 3620, 3650, 3702, 3722, 3784, 3943, 3961, 3992, 4020, 4051, 4293, 4444, 4507, 4570, 4592, 4597, 4646, 4753, 4813, 4814, 4840, 4853, 4881, 4904, 4940, 4953, 4978, 89, 90, 215, 407, 585, 806, 811, 846, 903, 1045, 1223, 1291, 1320, 1332, 1362, 1390, 1452, 1500, 1513, 1530, 1772, 1903, 1935, 2054, 2435, 2574, 2747, 2765, 2803, 2819, 2845, 2858, 2917, 2940, 2965, 3013, 3058, 3199, 3277, 3299, 3339, 3378, 3483, 3506, 3766, 3780, 3833, 3891, 3916, 4054, 4093, 4158, 4256, 4261, 4390, 4445, 4553, 4976, 5008, 5037, 5381, 5482, 5484, 5493, 5519, 5636, 5661, 5933, 5965, 5989, 6109, 6178, 6349, 6391, 6462, 6701, 7093, 7094, 7107, 7370, 7453, 7493, 7583, 7589, 7607, 7612, 7768, 7891, 8160, 8220, 8453, 8580, 8689, 9013, 9099, 9119, 9120, 9678, 9825, 9921, 58, 1241, 2016, 2315, 3312, 3564, 3968, 4622, 6213, 6724, 8100, 8866, 8868, 9440, 9962, 10082, 11084, 13960, 14397, 15186, 16742, 18268, 18941, 19346, 21424, 21817, 22645, 24376, 26133, 26417, 26523, 26906, 28596, 32288, 37209, 37834, 37862, 39645, 40235, 40540, 41454, 43358, 43695, 47227, 47552, 48219, 49286, 49891, 50168, 50200, 50339, 51604, 52028, 53777, 53804, 54747, 55172, 55922, 56194, 56205, 57618, 61377, 61597, 61852, 63878, 64973, 67042, 68213, 69003, 70013, 72335, 73212, 73620, 73788, 74457, 74882, 76018, 76306, 76430, 79798, 80109, 81037, 82019, 82804, 83224, 84438, 86005, 87635, 87943, 88710, 88712, 91265, 91331, 94503, 94775, 95083, 97854, 99396, 99732, 99926};
  
  int n = sizeof(arr)/sizeof(arr[0]);
// table_size of hash table as 6
  HashMapTable ht(6);
  for (int i = 0; i < n; i++)
    ht.insertElement(arr[i]);
// deleting element 34 from the hash table
    //ht.deleteElement(34);
// displaying the final data of hash table
    ht.displayHashTable();
  return 0;
}
/*20, 34, 56, 54, 76, 87, 23, 34, 24, 34, 64, 24 ,85, 38, 94, 192, 128, 1, 182, 14, 23, 43, 83, 904, 384, 934, 283, 8273, 182, 73, 283, 947, 283, 341, 827, 905, 273, 9185, 26374, 69, 273,2829, 9012, 8273, 72634, 2938, 28537, 27849, 28365, 2836, 7254, 93464, 234689, 986432, 43892, 84763, 2789, 3072, 16666, 21214, 30341, 37980, 67133, 86709, 95167, 105804, 114189, 115389, 117378, 127650, 128847, 131321, 138486, 160663, 164376, 181682, 186816, 205728, 238150, 238989, 253134, 253602, 258080, 261401, 262226, 268180, 269704, 275963, 285057, 285131, 286523, 289645, 290740, 295719, 332589, 334003, 338341, 343875, 351444, 353620, 355877, 370200, 371322, 374885, 375133, 379814, 384057, 388787, 401621, 407044, 417971, 448323, 449146, 465952, 473462, 481711, 499177, 513092, 514866, 518541, 521841, 524182, 525611, 551541, 560252, 570479, 578477, 589292, 590360, 617349, 631411, 638450, 661832, 671432, 691463, 693099, 709191, 714780, 721489, 740278, 744149, 745264, 751409, 762114, 763624, 767146, 767812, 777198, 799299, 812204, 822432, 831187, 842830, 883982, 886307, 892785, 1346, 7022, 14928, 29813, 32298, 32467, 82843, 91407, 101772, 104309, 114330, 117577, 129648, 130620, 143882, 171384, 173453, 190491, 190938, 197315, 199543, 200221, 215363, 215570, 227226, 229790, 247759, 255634, 259585, 266455, 273839, 288417, 294893, 295033, 322580, 329484, 339461, 345548, 359049, 370512, 393251, 411284, 428861, 436151, 437900, 438115, 439788, 460300, 471289, 472883, 493029, 493867, 499878, 502615, 505880, 507816, 521446, 532112, 540255, 547342, 570778, 583907, 593914, 596236, 597838, 611123, 618788, 630486, 635210, 644014, 644726, 660742, 669928, 679493, 702688, 710994, 718001, 735518, 738052, 749254, 750521, 762552, 769462, 784444, 786251, 817204, 820232, 826545, 826697, 828341, 832840, 834228, 841566, 841903, 849756, 857866, 872268, 877949, 880260, 899321, 38, 59, 145, 263, 287, 532, 567, 607, 663, 780, 997, 1100, 1224, 1323, 1365, 1490, 1655, 2010, 2155, 2287, 2298, 2389, 2445, 2552, 2571, 2733, 2741, 2770, 2781, 2814, 3060, 3158, 3197, 3228, 3308, 3422, 3450, 3615, 3703, 3873, 3923, 4341, 4368, 4394, 4474, 4487, 4488, 4528, 4737, 5054, 5132, 5144, 5177, 5230, 5730, 5814, 5836, 6093, 6110, 6205, 6227, 6242, 6399, 6437, 6673, 6824, 6967, 6993, 7031, 7161, 7171, 7261, 7343, 7391, 7626, 7649, 7696, 7704, 7757, 7774, 7775, 7798, 7968, 8018, 8081, 8125, 8126, 8272, 8290, 8367, 8415, 8434, 8442, 8567, 8582, 8739, 8896, 9640, 9750, 9966, 25, 135, 315, 321, 398, 430, 469, 496, 515, 583, 667, 865, 888, 929, 1041, 1120, 1244, 1489, 1519, 1523, 1555, 1824, 1917, 1926, 2013, 2304, 2458, 2487, 2510, 2703, 2726, 2876, 2982, 3367, 3473, 3679, 3693, 3772, 3945, 4063, 4378, 4428, 4434, 4442, 4550, 4599, 4620, 4675, 4704, 4886, 4891, 4930, 5547, 5623, 5677, 5762, 5830, 5861, 5885, 6065, 6131, 6165, 6175, 6179, 6268, 6398, 6411, 6469, 6506, 6623, 6736, 6786, 6919, 6921, 6933, 6964, 6969, 7191, 7371, 7451, 7694, 7695, 7787, 8003, 8024, 8091, 8133, 8144, 8300, 8396, 9101, 9243, 9261, 9274, 9306, 9568, 9606, 9670, 9703, 9878, 172, 451, 602, 963, 1098, 1330, 1417, 1433, 1521, 1563, 1621, 1633, 1638, 1650, 1770, 1828, 1906, 1941, 1987, 2164, 2254, 2276, 2434, 2435, 2479, 2532, 2808, 2980, 3121, 3197, 3241, 3366, 3417, 3454, 3522, 3534, 3549, 3760, 3804, 3874, 4099, 4114, 4271, 4443, 4470, 4563, 4588, 4728, 4859, 4862, 4972, 5098, 5100, 5285, 5418, 5433, 5610, 5879, 5932, 6017, 6021, 6048, 6215, 6231, 6370, 6419, 6498, 6551, 6727, 6741, 6773, 7027, 7043, 7344, 7379, 7469, 7596, 7628, 7760, 7770, 7798, 7971, 8112, 8348, 8375, 8391, 8580, 8622, 8631, 8750, 8814, 8823, 8871, 8911, 9348, 9420, 9476, 9653, 9668, 9769*/